/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/parse-bmfont-binary";
exports.ids = ["vendor-chunks/parse-bmfont-binary"];
exports.modules = {

/***/ "(action-browser)/./node_modules/parse-bmfont-binary/index.js":
/*!***************************************************!*\
  !*** ./node_modules/parse-bmfont-binary/index.js ***!
  \***************************************************/
/***/ ((module) => {

eval("var HEADER = [66, 77, 70]\n\nmodule.exports = function readBMFontBinary(buf) {\n  if (buf.length < 6)\n    throw new Error('invalid buffer length for BMFont')\n\n  var header = HEADER.every(function(byte, i) {\n    return buf.readUInt8(i) === byte\n  })\n\n  if (!header)\n    throw new Error('BMFont missing BMF byte header')\n\n  var i = 3\n  var vers = buf.readUInt8(i++)\n  if (vers > 3)\n    throw new Error('Only supports BMFont Binary v3 (BMFont App v1.10)')\n  \n  var target = { kernings: [], chars: [] }\n  for (var b=0; b<5; b++)\n    i += readBlock(target, buf, i)\n  return target\n}\n\nfunction readBlock(target, buf, i) {\n  if (i > buf.length-1)\n    return 0\n\n  var blockID = buf.readUInt8(i++)\n  var blockSize = buf.readInt32LE(i)\n  i += 4\n\n  switch(blockID) {\n    case 1: \n      target.info = readInfo(buf, i)\n      break\n    case 2:\n      target.common = readCommon(buf, i)\n      break\n    case 3:\n      target.pages = readPages(buf, i, blockSize)\n      break\n    case 4:\n      target.chars = readChars(buf, i, blockSize)\n      break\n    case 5:\n      target.kernings = readKernings(buf, i, blockSize)\n      break\n  }\n  return 5 + blockSize\n}\n\nfunction readInfo(buf, i) {\n  var info = {}\n  info.size = buf.readInt16LE(i)\n\n  var bitField = buf.readUInt8(i+2)\n  info.smooth = (bitField >> 7) & 1\n  info.unicode = (bitField >> 6) & 1\n  info.italic = (bitField >> 5) & 1\n  info.bold = (bitField >> 4) & 1\n  \n  //fixedHeight is only mentioned in binary spec \n  if ((bitField >> 3) & 1)\n    info.fixedHeight = 1\n  \n  info.charset = buf.readUInt8(i+3) || ''\n  info.stretchH = buf.readUInt16LE(i+4)\n  info.aa = buf.readUInt8(i+6)\n  info.padding = [\n    buf.readInt8(i+7),\n    buf.readInt8(i+8),\n    buf.readInt8(i+9),\n    buf.readInt8(i+10)\n  ]\n  info.spacing = [\n    buf.readInt8(i+11),\n    buf.readInt8(i+12)\n  ]\n  info.outline = buf.readUInt8(i+13)\n  info.face = readStringNT(buf, i+14)\n  return info\n}\n\nfunction readCommon(buf, i) {\n  var common = {}\n  common.lineHeight = buf.readUInt16LE(i)\n  common.base = buf.readUInt16LE(i+2)\n  common.scaleW = buf.readUInt16LE(i+4)\n  common.scaleH = buf.readUInt16LE(i+6)\n  common.pages = buf.readUInt16LE(i+8)\n  var bitField = buf.readUInt8(i+10)\n  common.packed = 0\n  common.alphaChnl = buf.readUInt8(i+11)\n  common.redChnl = buf.readUInt8(i+12)\n  common.greenChnl = buf.readUInt8(i+13)\n  common.blueChnl = buf.readUInt8(i+14)\n  return common\n}\n\nfunction readPages(buf, i, size) {\n  var pages = []\n  var text = readNameNT(buf, i)\n  var len = text.length+1\n  var count = size / len\n  for (var c=0; c<count; c++) {\n    pages[c] = buf.slice(i, i+text.length).toString('utf8')\n    i += len\n  }\n  return pages\n}\n\nfunction readChars(buf, i, blockSize) {\n  var chars = []\n\n  var count = blockSize / 20\n  for (var c=0; c<count; c++) {\n    var char = {}\n    var off = c*20\n    char.id = buf.readUInt32LE(i + 0 + off)\n    char.x = buf.readUInt16LE(i + 4 + off)\n    char.y = buf.readUInt16LE(i + 6 + off)\n    char.width = buf.readUInt16LE(i + 8 + off)\n    char.height = buf.readUInt16LE(i + 10 + off)\n    char.xoffset = buf.readInt16LE(i + 12 + off)\n    char.yoffset = buf.readInt16LE(i + 14 + off)\n    char.xadvance = buf.readInt16LE(i + 16 + off)\n    char.page = buf.readUInt8(i + 18 + off)\n    char.chnl = buf.readUInt8(i + 19 + off)\n    chars[c] = char\n  }\n  return chars\n}\n\nfunction readKernings(buf, i, blockSize) {\n  var kernings = []\n  var count = blockSize / 10\n  for (var c=0; c<count; c++) {\n    var kern = {}\n    var off = c*10\n    kern.first = buf.readUInt32LE(i + 0 + off)\n    kern.second = buf.readUInt32LE(i + 4 + off)\n    kern.amount = buf.readInt16LE(i + 8 + off)\n    kernings[c] = kern\n  }\n  return kernings\n}\n\nfunction readNameNT(buf, offset) {\n  var pos=offset\n  for (; pos<buf.length; pos++) {\n    if (buf[pos] === 0x00) \n      break\n  }\n  return buf.slice(offset, pos)\n}\n\nfunction readStringNT(buf, offset) {\n  return readNameNT(buf, offset).toString('utf8')\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wYXJzZS1ibWZvbnQtYmluYXJ5L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsZ0JBQWdCLEtBQUs7QUFDckI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUyxnQkFBZ0I7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0bi8uL25vZGVfbW9kdWxlcy9wYXJzZS1ibWZvbnQtYmluYXJ5L2luZGV4LmpzPzQwMTMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEhFQURFUiA9IFs2NiwgNzcsIDcwXVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlYWRCTUZvbnRCaW5hcnkoYnVmKSB7XG4gIGlmIChidWYubGVuZ3RoIDwgNilcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgYnVmZmVyIGxlbmd0aCBmb3IgQk1Gb250JylcblxuICB2YXIgaGVhZGVyID0gSEVBREVSLmV2ZXJ5KGZ1bmN0aW9uKGJ5dGUsIGkpIHtcbiAgICByZXR1cm4gYnVmLnJlYWRVSW50OChpKSA9PT0gYnl0ZVxuICB9KVxuXG4gIGlmICghaGVhZGVyKVxuICAgIHRocm93IG5ldyBFcnJvcignQk1Gb250IG1pc3NpbmcgQk1GIGJ5dGUgaGVhZGVyJylcblxuICB2YXIgaSA9IDNcbiAgdmFyIHZlcnMgPSBidWYucmVhZFVJbnQ4KGkrKylcbiAgaWYgKHZlcnMgPiAzKVxuICAgIHRocm93IG5ldyBFcnJvcignT25seSBzdXBwb3J0cyBCTUZvbnQgQmluYXJ5IHYzIChCTUZvbnQgQXBwIHYxLjEwKScpXG4gIFxuICB2YXIgdGFyZ2V0ID0geyBrZXJuaW5nczogW10sIGNoYXJzOiBbXSB9XG4gIGZvciAodmFyIGI9MDsgYjw1OyBiKyspXG4gICAgaSArPSByZWFkQmxvY2sodGFyZ2V0LCBidWYsIGkpXG4gIHJldHVybiB0YXJnZXRcbn1cblxuZnVuY3Rpb24gcmVhZEJsb2NrKHRhcmdldCwgYnVmLCBpKSB7XG4gIGlmIChpID4gYnVmLmxlbmd0aC0xKVxuICAgIHJldHVybiAwXG5cbiAgdmFyIGJsb2NrSUQgPSBidWYucmVhZFVJbnQ4KGkrKylcbiAgdmFyIGJsb2NrU2l6ZSA9IGJ1Zi5yZWFkSW50MzJMRShpKVxuICBpICs9IDRcblxuICBzd2l0Y2goYmxvY2tJRCkge1xuICAgIGNhc2UgMTogXG4gICAgICB0YXJnZXQuaW5mbyA9IHJlYWRJbmZvKGJ1ZiwgaSlcbiAgICAgIGJyZWFrXG4gICAgY2FzZSAyOlxuICAgICAgdGFyZ2V0LmNvbW1vbiA9IHJlYWRDb21tb24oYnVmLCBpKVxuICAgICAgYnJlYWtcbiAgICBjYXNlIDM6XG4gICAgICB0YXJnZXQucGFnZXMgPSByZWFkUGFnZXMoYnVmLCBpLCBibG9ja1NpemUpXG4gICAgICBicmVha1xuICAgIGNhc2UgNDpcbiAgICAgIHRhcmdldC5jaGFycyA9IHJlYWRDaGFycyhidWYsIGksIGJsb2NrU2l6ZSlcbiAgICAgIGJyZWFrXG4gICAgY2FzZSA1OlxuICAgICAgdGFyZ2V0Lmtlcm5pbmdzID0gcmVhZEtlcm5pbmdzKGJ1ZiwgaSwgYmxvY2tTaXplKVxuICAgICAgYnJlYWtcbiAgfVxuICByZXR1cm4gNSArIGJsb2NrU2l6ZVxufVxuXG5mdW5jdGlvbiByZWFkSW5mbyhidWYsIGkpIHtcbiAgdmFyIGluZm8gPSB7fVxuICBpbmZvLnNpemUgPSBidWYucmVhZEludDE2TEUoaSlcblxuICB2YXIgYml0RmllbGQgPSBidWYucmVhZFVJbnQ4KGkrMilcbiAgaW5mby5zbW9vdGggPSAoYml0RmllbGQgPj4gNykgJiAxXG4gIGluZm8udW5pY29kZSA9IChiaXRGaWVsZCA+PiA2KSAmIDFcbiAgaW5mby5pdGFsaWMgPSAoYml0RmllbGQgPj4gNSkgJiAxXG4gIGluZm8uYm9sZCA9IChiaXRGaWVsZCA+PiA0KSAmIDFcbiAgXG4gIC8vZml4ZWRIZWlnaHQgaXMgb25seSBtZW50aW9uZWQgaW4gYmluYXJ5IHNwZWMgXG4gIGlmICgoYml0RmllbGQgPj4gMykgJiAxKVxuICAgIGluZm8uZml4ZWRIZWlnaHQgPSAxXG4gIFxuICBpbmZvLmNoYXJzZXQgPSBidWYucmVhZFVJbnQ4KGkrMykgfHwgJydcbiAgaW5mby5zdHJldGNoSCA9IGJ1Zi5yZWFkVUludDE2TEUoaSs0KVxuICBpbmZvLmFhID0gYnVmLnJlYWRVSW50OChpKzYpXG4gIGluZm8ucGFkZGluZyA9IFtcbiAgICBidWYucmVhZEludDgoaSs3KSxcbiAgICBidWYucmVhZEludDgoaSs4KSxcbiAgICBidWYucmVhZEludDgoaSs5KSxcbiAgICBidWYucmVhZEludDgoaSsxMClcbiAgXVxuICBpbmZvLnNwYWNpbmcgPSBbXG4gICAgYnVmLnJlYWRJbnQ4KGkrMTEpLFxuICAgIGJ1Zi5yZWFkSW50OChpKzEyKVxuICBdXG4gIGluZm8ub3V0bGluZSA9IGJ1Zi5yZWFkVUludDgoaSsxMylcbiAgaW5mby5mYWNlID0gcmVhZFN0cmluZ05UKGJ1ZiwgaSsxNClcbiAgcmV0dXJuIGluZm9cbn1cblxuZnVuY3Rpb24gcmVhZENvbW1vbihidWYsIGkpIHtcbiAgdmFyIGNvbW1vbiA9IHt9XG4gIGNvbW1vbi5saW5lSGVpZ2h0ID0gYnVmLnJlYWRVSW50MTZMRShpKVxuICBjb21tb24uYmFzZSA9IGJ1Zi5yZWFkVUludDE2TEUoaSsyKVxuICBjb21tb24uc2NhbGVXID0gYnVmLnJlYWRVSW50MTZMRShpKzQpXG4gIGNvbW1vbi5zY2FsZUggPSBidWYucmVhZFVJbnQxNkxFKGkrNilcbiAgY29tbW9uLnBhZ2VzID0gYnVmLnJlYWRVSW50MTZMRShpKzgpXG4gIHZhciBiaXRGaWVsZCA9IGJ1Zi5yZWFkVUludDgoaSsxMClcbiAgY29tbW9uLnBhY2tlZCA9IDBcbiAgY29tbW9uLmFscGhhQ2hubCA9IGJ1Zi5yZWFkVUludDgoaSsxMSlcbiAgY29tbW9uLnJlZENobmwgPSBidWYucmVhZFVJbnQ4KGkrMTIpXG4gIGNvbW1vbi5ncmVlbkNobmwgPSBidWYucmVhZFVJbnQ4KGkrMTMpXG4gIGNvbW1vbi5ibHVlQ2hubCA9IGJ1Zi5yZWFkVUludDgoaSsxNClcbiAgcmV0dXJuIGNvbW1vblxufVxuXG5mdW5jdGlvbiByZWFkUGFnZXMoYnVmLCBpLCBzaXplKSB7XG4gIHZhciBwYWdlcyA9IFtdXG4gIHZhciB0ZXh0ID0gcmVhZE5hbWVOVChidWYsIGkpXG4gIHZhciBsZW4gPSB0ZXh0Lmxlbmd0aCsxXG4gIHZhciBjb3VudCA9IHNpemUgLyBsZW5cbiAgZm9yICh2YXIgYz0wOyBjPGNvdW50OyBjKyspIHtcbiAgICBwYWdlc1tjXSA9IGJ1Zi5zbGljZShpLCBpK3RleHQubGVuZ3RoKS50b1N0cmluZygndXRmOCcpXG4gICAgaSArPSBsZW5cbiAgfVxuICByZXR1cm4gcGFnZXNcbn1cblxuZnVuY3Rpb24gcmVhZENoYXJzKGJ1ZiwgaSwgYmxvY2tTaXplKSB7XG4gIHZhciBjaGFycyA9IFtdXG5cbiAgdmFyIGNvdW50ID0gYmxvY2tTaXplIC8gMjBcbiAgZm9yICh2YXIgYz0wOyBjPGNvdW50OyBjKyspIHtcbiAgICB2YXIgY2hhciA9IHt9XG4gICAgdmFyIG9mZiA9IGMqMjBcbiAgICBjaGFyLmlkID0gYnVmLnJlYWRVSW50MzJMRShpICsgMCArIG9mZilcbiAgICBjaGFyLnggPSBidWYucmVhZFVJbnQxNkxFKGkgKyA0ICsgb2ZmKVxuICAgIGNoYXIueSA9IGJ1Zi5yZWFkVUludDE2TEUoaSArIDYgKyBvZmYpXG4gICAgY2hhci53aWR0aCA9IGJ1Zi5yZWFkVUludDE2TEUoaSArIDggKyBvZmYpXG4gICAgY2hhci5oZWlnaHQgPSBidWYucmVhZFVJbnQxNkxFKGkgKyAxMCArIG9mZilcbiAgICBjaGFyLnhvZmZzZXQgPSBidWYucmVhZEludDE2TEUoaSArIDEyICsgb2ZmKVxuICAgIGNoYXIueW9mZnNldCA9IGJ1Zi5yZWFkSW50MTZMRShpICsgMTQgKyBvZmYpXG4gICAgY2hhci54YWR2YW5jZSA9IGJ1Zi5yZWFkSW50MTZMRShpICsgMTYgKyBvZmYpXG4gICAgY2hhci5wYWdlID0gYnVmLnJlYWRVSW50OChpICsgMTggKyBvZmYpXG4gICAgY2hhci5jaG5sID0gYnVmLnJlYWRVSW50OChpICsgMTkgKyBvZmYpXG4gICAgY2hhcnNbY10gPSBjaGFyXG4gIH1cbiAgcmV0dXJuIGNoYXJzXG59XG5cbmZ1bmN0aW9uIHJlYWRLZXJuaW5ncyhidWYsIGksIGJsb2NrU2l6ZSkge1xuICB2YXIga2VybmluZ3MgPSBbXVxuICB2YXIgY291bnQgPSBibG9ja1NpemUgLyAxMFxuICBmb3IgKHZhciBjPTA7IGM8Y291bnQ7IGMrKykge1xuICAgIHZhciBrZXJuID0ge31cbiAgICB2YXIgb2ZmID0gYyoxMFxuICAgIGtlcm4uZmlyc3QgPSBidWYucmVhZFVJbnQzMkxFKGkgKyAwICsgb2ZmKVxuICAgIGtlcm4uc2Vjb25kID0gYnVmLnJlYWRVSW50MzJMRShpICsgNCArIG9mZilcbiAgICBrZXJuLmFtb3VudCA9IGJ1Zi5yZWFkSW50MTZMRShpICsgOCArIG9mZilcbiAgICBrZXJuaW5nc1tjXSA9IGtlcm5cbiAgfVxuICByZXR1cm4ga2VybmluZ3Ncbn1cblxuZnVuY3Rpb24gcmVhZE5hbWVOVChidWYsIG9mZnNldCkge1xuICB2YXIgcG9zPW9mZnNldFxuICBmb3IgKDsgcG9zPGJ1Zi5sZW5ndGg7IHBvcysrKSB7XG4gICAgaWYgKGJ1Zltwb3NdID09PSAweDAwKSBcbiAgICAgIGJyZWFrXG4gIH1cbiAgcmV0dXJuIGJ1Zi5zbGljZShvZmZzZXQsIHBvcylcbn1cblxuZnVuY3Rpb24gcmVhZFN0cmluZ05UKGJ1Ziwgb2Zmc2V0KSB7XG4gIHJldHVybiByZWFkTmFtZU5UKGJ1Ziwgb2Zmc2V0KS50b1N0cmluZygndXRmOCcpXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/parse-bmfont-binary/index.js\n");

/***/ })

};
;